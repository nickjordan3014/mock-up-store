{"version":3,"sources":["screens/HomeScreen.js","components/Message.js","screens/TechnologyStore.js","components/CheckoutTotal.js","components/CheckoutValues.js","screens/Checkout.js","App.js"],"names":["HomeScreen","route","navigation","TechList","useContext","TechContext","gotoTech","useCallback","key","navigate","techKey","View","style","styles","container","Text","heading","FlatList","data","renderItem","item","title","name","price","onPress","size","Message","props","items","added","TechnologyStore","params","currentTechItem","find","t","useState","itemAmount","setItemAmount","addToCart","paddingBottom","Title","Divider","card","description","CheckoutTotal","total","i","length","CheckoutValues","currString","max","strings","inCart","push","checkout","Checkout","EmptyCart","Stack","createNativeStackNavigator","React","createContext","App","Provider","value","NavigationContainer","Navigator","Screen","component","StyleSheet","create","flex","backgroundColor","alignItems","fontSize","fontWeight","width","paddingTop","textAlign","padding"],"mappings":"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","file":"static/js/app.7dc0d5f4.chunk.js","sourcesContent":["import { useCallback, useContext } from \"react\";\r\nimport { View, Text, FlatList } from \"react-native\";\r\nimport { Button } from \"react-native-elements\";\r\nimport { styles, TechContext } from \"../App.js\"\r\n\r\nexport default function HomeScreen({ route, navigation }) {\r\n    let TechList = useContext(TechContext);\r\n    let gotoTech = useCallback(({ key }) => { \r\n        navigation.navigate(\"Technology\", { techKey: key, TechList: TechList})\r\n    });\r\n    \r\n    \r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={styles.heading}>Best Bought: Technology Store of the Future</Text>\r\n            <FlatList data={TechList} renderItem={({ item }) => \r\n                <View>\r\n                    <Button title={item.name + \": $\" + item.price} \r\n                        onPress={() => gotoTech(item)}\r\n                        style={styles.size} \r\n                    />\r\n                </View>\r\n            }/>\r\n            <Button title={\"Go to Cart\"}\r\n                onPress={() => navigation.navigate(\"Checkout\")} \r\n                style={styles.size}\r\n            />\r\n        </View>\r\n    )\r\n}","export default function Message(props) {\r\n    let items = props.data\r\n    if (items.added === 0) {\r\n        return <></>\r\n    } else if(items.added === 1) {\r\n        return <>You have {items.added} {items.name} in your cart</>\r\n    } else {\r\n        return <>You have {items.added} {items.name}s in your cart</>        \r\n    }\r\n}","import { useCallback, useContext, useState } from \"react\";\r\nimport { View, Text } from \"react-native\";\r\nimport { Button, Card } from \"react-native-elements\";\r\nimport { styles, TechContext } from \"../App\";\r\nimport Message from '.././components/Message'\r\n\r\nexport default function TechnologyStore({ route, navigation }) {\r\n    let { techKey } = route.params\r\n    let TechList = useContext(TechContext)\r\n\r\n    let currentTechItem = TechList.find(t => t.key === techKey)\r\n\r\n    let [itemAmount, setItemAmount] = useState(currentTechItem.added+1);\r\n    let addToCart = useCallback(() => {\r\n        setItemAmount(itemAmount+1)\r\n        currentTechItem.added = itemAmount\r\n    })\r\n    return(\r\n        <View style={styles.container}>\r\n            <Card styles={{paddingBottom: 10}}>\r\n                <Card.Title>{currentTechItem.name}: ${currentTechItem.price}</Card.Title>\r\n                <Card.Divider />\r\n                <Text style={styles.card}>{currentTechItem.description}</Text>\r\n                <Message data={currentTechItem} style={styles.card} />\r\n            </Card>\r\n            \r\n            <Button title=\"Add to Cart\"\r\n                style={styles.size} \r\n                onPress={addToCart}\r\n            />\r\n            <Button title=\"Go to Home Page\"\r\n                style={styles.size} \r\n                onPress={() => navigation.navigate(\"Home\")}\r\n            />\r\n            <Button title=\"Go to Cart\"\r\n                style={styles.size} \r\n                onPress={() => navigation.navigate(\"Checkout\")}\r\n            />\r\n        </View>\r\n    );\r\n}\r\n","import { Text } from \"react-native\";\r\nimport { styles } from \"../App\";\r\n\r\nexport default function CheckoutTotal(props) {\r\n    let TechList = props.data\r\n    let total = 0 //resets total every visit\r\n    let currValue\r\n    for (let i = 0; i < TechList.length; i++) {\r\n        currValue = TechList[i].added * TechList[i].price\r\n        total += currValue\r\n    }\r\n    return (\r\n            <Text style={styles.heading}>Your total is: ${total}</Text>\r\n    )\r\n}","import { FlatList, Text, View } from \"react-native\" \r\nimport { Card } from \"react-native-elements\"\r\nimport { styles } from \"../App\"\r\n\r\nexport default function CheckoutValues(props) {\r\n    let TechList = props.data\r\n    let max = TechList.length\r\n    let strings = []\r\n    let currString\r\n\r\n    for (let i = 0; i < max; i++) { // resetting cart\r\n        TechList[i].inCart = false\r\n        strings = []\r\n    }\r\n\r\n    for (let i = 0; i < max; i++) { // Creating String Array\r\n        if (TechList[i].added > 1) {\r\n            currString = \"You have \" + TechList[i].added + \" \" + TechList[i].name + \"s in your cart.\"\r\n            strings.push(currString)\r\n        } else if(TechList[i].added === 1) {\r\n            currString = \"You have \" + TechList[i].added + \" \" + TechList[i].name + \" in your cart.\"\r\n            strings.push(currString)\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <FlatList \r\n            data={strings}\r\n            renderItem={({ item }) => \r\n                <View>\r\n                    <Card style={styles.checkout}>\r\n                        <Text>{item}</Text>\r\n                    </Card>\r\n                </View>\r\n            }\r\n        />\r\n    )\r\n}","import { useCallback, useContext } from \"react\";\r\nimport { View, Text } from \"react-native\";\r\nimport { Button } from \"react-native-elements\";\r\nimport { styles, TechContext } from \"../App\";\r\nimport CheckoutTotal from \"../components/CheckoutTotal\";\r\nimport CheckoutValues from \"../components/CheckoutValues\";\r\n\r\nexport default function Checkout({navigation}) {\r\n    let TechList = useContext(TechContext)\r\n    let EmptyCart = useCallback(() => {\r\n        for(let i = 0; i < TechList.length; i++) {\r\n            TechList[i].added = 0\r\n        }\r\n        navigation.navigate(\"Home\")\r\n    }) \r\n    return(\r\n        <View style={styles.container}>\r\n            <Text style={styles.heading}>Checkout</Text>\r\n            <CheckoutValues data={TechList} />\r\n            <CheckoutTotal data={TechList} />\r\n            <Button title=\"Empty Cart\"\r\n                style={styles.size}\r\n                onPress={() => EmptyCart()}\r\n            />\r\n        </View>\r\n    );\r\n}\r\n","import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { StyleSheet } from 'react-native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport HomeScreen from './screens/HomeScreen';\nimport TechnologyStore from './screens/TechnologyStore';\nimport Checkout from './screens/Checkout';\nconst Stack = createNativeStackNavigator();\n\nlet TechList = [\n    {\n      name: \"Computer\",\n      price: 1000,\n      key: 0,\n      added: 0,\n      inCart: false,\n      description : \"Home Desktop to help with any work and gaming needs\",\n    },\n    {\n      name: \"UPhone\",\n      price: 800,\n      key: 1,\n      added: 0,\n      inCart: false,\n      description: \"The newest phone model, optimized for messaging throughout the world\"\n    },\n    {\n      name: \"Air Fryer\",\n      price: 600,\n      key: 2,\n      added: 0,\n      inCart: false,\n      description: \"The best way to make French Fries and Chicken Nuggets\"\n    },\n    {\n      name: \"UPad\",\n      price: 400,\n      key: 3,\n      added: 0,\n      inCart: false,\n      description: \"All the power of a UPhone with no data plan\"\n    }\n]\nexport const TechContext = React.createContext(TechList);\n\nexport default function App() {\n  return (\n    <TechContext.Provider value={TechList}>\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen name=\"Home\" component={HomeScreen}/>\n        <Stack.Screen name=\"Technology\" component={TechnologyStore}/>\n        <Stack.Screen name=\"Checkout\" component={Checkout}/>\n      </Stack.Navigator>\n    </NavigationContainer>\n    </TechContext.Provider>\n  );\n}\n\nexport const styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n  },\n  heading: {\n    fontSize: 30,\n    paddingBottom: 10,\n    fontWeight: 'bold'\n  },\n  size: {\n    width: 300,\n    paddingTop: 5,\n    paddingBottom: 10\n  },\n  card :{\n    textAlign: 'left',\n    fontSize: 18\n  },\n  padding: {\n    padding: 10\n  },\n  checkout: {\n    fontSize: 18\n  }\n});\n"],"sourceRoot":""}